import { Tab } from '@headlessui/react';
import Head from 'next/head';
import Link from 'next/link';

import classNames from 'classnames';
import Image from 'next/image';

import bgImage from '../public/images/photography-bg.jpg';

import { Photo } from '@/types/types';
import { getImages } from '@/utils/images-util';
import { GetStaticProps } from 'next';
import * as nodeFetch from 'node-fetch';
import { createApi } from 'unsplash-js';

import Gallery from '../components/Gallery';

const tabs = [
  {
    name: 'All',
  },
  {
    name: 'Ocean',
  },
  {
    name: 'Forest',
  },
];

type HomeProps = {
  oceans: Photo[];
  forests: Photo[];
};

export const getStaticProps: GetStaticProps<HomeProps> = async () => {
  const unsplash = createApi({
    accessKey: process.env.UNSPLASH_ACCESS_KEY!,
    fetch: nodeFetch.default as unknown as typeof fetch,
  });

  const [oceans, forests] = await Promise.all([
    getImages(unsplash, 'oceans'),
    getImages(unsplash, 'forest'),
  ]);

  return {
    props: {
      oceans,
      forests,
    },
  };
};

export default function Home({ oceans, forests }: HomeProps) {
  return (
    <div className="h-full overflow-auto">
      <Head>
        <title>Photography Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <Image
        className="fixed left-0 top-0"
        src={bgImage}
        alt=""
        placeholder="blur"
      />

      <div className="fixed left-0 top-0 w-full h-full from-stone-900 bg-gradient-to-t"></div>

      <header className="fixed top-0 w-full z-30 flex justify-between items-center h-[90px] px-6">
        <div className="hidden">hm</div>
        <span className="uppercase font-medium text-lg">
          Photography Portfolio
        </span>
        <Link
          href="#"
          className="rounded-3xl bg-white text-stone-600 px-5 py-3 hover:bg-opacity-90"
        >
          Get in touch
        </Link>
      </header>

      <main className="relative pt-[110px] z-20">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex items-center gap-4">
              {tabs.map((tab, index) => (
                <Tab key={`${tab}-${index}`} className="p-2 uppercase">
                  {({ selected }) => (
                    <span
                      className={classNames(
                        'uppercase text-l',
                        selected ? 'text-white' : 'text-stone-600',
                      )}
                    >
                      {tab.name}
                    </span>
                  )}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="h-full max-w-[900px] w-full p-2 sm:p-4 my-6">
              <Tab.Panel>
                <Gallery photos={[...oceans, ...forests]} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={oceans} />
              </Tab.Panel>
              <Tab.Panel>
                <Gallery photos={forests} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </main>

      <footer className="relative h-[90px] flex justify-center items-center uppercase text-lg font-medium z-20">
        <p>Photography Portfolio</p>
      </footer>
    </div>
  );
}
